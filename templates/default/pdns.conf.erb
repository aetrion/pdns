# This configuration file was generated by Chef.
# Local modifications will be overwritten.
#################################################

#################################
# local-address Local IP address to which we bind
#
<%= "local-address=#{node['pdns']['server']['local-address'].join(', ')}" unless node['pdns']['server']['local-address'].empty? %>

#################################
# local-ipv6    Local IP address to which we bind
#
<%= "local-ipv6=#{node['pdns']['server']['local-ipv6'].join(', ')}" unless node['pdns']['server']['local-ipv6'].empty? %>

#################################
# local-port    The port on which we listen
#
<%= "local-port=#{node['pdns']['server']['local-port']}" if node['pdns']['server']['local-port'] %>

#################################
# allow-axfr-ips    If enabled, restrict zonetransfers to originate from these
#                   IP addresses
#
<%= "allow-axfr-ips=#{node['pdns']['server']['allow-axfr-ips'].join(', ')}" unless node['pdns']['server']['allow-axfr-ips'].empty? %>

#################################
# disable-axfr  Disable zonetransfers but do allow TCP queries
#
<%= "disable-axfr=#{node['pdns']['server']['disable-axfr']}" if node['pdns']['server']['disable-axfr'] %>

#################################
# allow-recursion-override   Local data even about hosts that don't exist will
#                            override the internet. (on/off)
#
<%= "allow-recursion=#{node['pdns']['server']['allow-recursion'].join(', ')}" unless node['pdns']['server']['allow-recursion'].empty? %>

#################################
# allow-recursion-override   Local data even about hosts that don't exist will
#                            override the internet. (on/off)
#
<%= "allow-recursion-override=#{node['pdns']['server']['allow-recursion-override']}" if node['pdns']['server']['allow-recursion-override'] %>

#################################
# cache-ttl     Seconds to store packets in the PacketCache
#
<%= "cache-ttl=#{node['pdns']['server']['cache-ttl']}" if node['pdns']['server']['cache-ttl'] %>

#################################
# recursor      If recursion is desired, IP address of a recursing nameserver
#
<%= "recursor=#{node['pdns']['server']['recursor']}" if node['pdns']['server']['recursor'] %>

#################################
# chroot        If set, chroot to this directory for more security
#
<%= "chroot=#{node['pdns']['server']['chroot']}" if node['pdns']['server']['chroot'] %>

#################################
# config-dir    Location of configuration directory (pdns.conf)
#
<%= "config-dir=#{node['pdns']['server']['config-dir']}" if node['pdns']['server']['config-dir'] %>

#################################
# daemon        Operate as a daemon
#
<%= "daemon=#{node['pdns']['server']['daemon']}" if node['pdns']['server']['daemon'] %>

#################################
# default-soa-name          name to insert in the SOA record if none set in the backend 
#
<%= "default-soa-name=#{node['pdns']['server']['default-soa-name']}" if node['pdns']['server']['default-soa-name'] %>

#################################
# guardian      Run within a guardian process
#
<%= "guardian=#{node['pdns']['server']['guardian']}" if node['pdns']['server']['guardian'] %>

#################################
# lazy-recursion        Only recurse if question cannot be answered locally
#
<%= "lazy-recursion=#{node['pdns']['server']['lazy-recursion']}" if node['pdns']['server']['lazy-recursion'] %>

#################################
# log-failed-updates    If PDNS should log failed update requests
#
<%= "log-failed-updates=#{node['pdns']['server']['log-failed-updates']}" if node['pdns']['server']['log-failed-updates'] %>

#################################
# logfile       Logfile to use
#
<%= "logfile=#{node['pdns']['server']['logfile']}" if node['pdns']['server']['logfile'] %>

#################################
# logging-facility      Log under a specific facility
#
<%= "logging-facility=#{node['pdns']['server']['logging-facility']}" if node['pdns']['server']['logging-facility'] %>

#################################
# loglevel      Amount of logging. Higher is more. Do not set below 3
#
<%= "loglevel=#{node['pdns']['server']['loglevel']}" if node['pdns']['server']['loglevel'] %>

#################################
# master        Act as a master
#
<%= "master=#{node['pdns']['server']['master']}" if node['pdns']['server']['master'] %>

#################################
# max-queue-length      Maximum queuelength before considering situation lost
#
<%= "max-queue-length=#{node['pdns']['server']['max-queue-length']}" if node['pdns']['server']['max-queue-length'] %>

#################################
# max-tcp-connections   Maximum number of TCP connections
#
<%= "max-tcp-connections=#{node['pdns']['server']['max-tcp-connections']}" if node['pdns']['server']['max-tcp-connections'] %>

#################################
# module-dir    Default directory for modules
#
<%= "module-dir=#{node['pdns']['server']['module-dir']}" if node['pdns']['server']['module-dir'] %>

#################################
# query-logging Hint backends that queries should be logged
#
<%= "query-logging=#{node['pdns']['server']['query-logging']}" if node['pdns']['server']['query-logging'] %>

#################################
# setgid        If set, change group id to this gid for more security
#
<%= "setgid=#{node['pdns']['group']}" if node['pdns']['group'] %>

#################################
# setuid        If set, change user id to this uid for more security
#
<%= "setuid=#{node['pdns']['user']}" if node['pdns']['user'] %>

#################################
# skip-cname    Do not perform CNAME indirection for each query
#
<%= "skip-cname=#{node['pdns']['server']['skip-cname']}" if node['pdns']['server']['skip-cname'] %>

#################################
# slave Act as a slave
#
<%= "slave=#{node['pdns']['server']['slave']}" if node['pdns']['server']['slave'] %>

#################################
# slave-cycle-interval  Reschedule failed SOA serial checks once every .. seconds
#
<%= "slave-cycle-interval=#{node['pdns']['server']['slave-cycle-interval']}" if node['pdns']['server']['slave-cycle-interval'] %>

#################################
# smtpredirector        Our smtpredir MX host
#
<%= "smtpredirector=#{node['pdns']['server']['smtpredirector']}" if node['pdns']['server']['smtpredirector'] %>

#################################
# soa-minimum-ttl       Default SOA mininum ttl
#
<%= "soa-minimum-ttl=#{node['pdns']['server']['soa-minimum-ttl']}" if node['pdns']['server']['soa-minimum-ttl'] %>

#################################
# soa-refresh-default  Default SOA refresh
#
<%= "soa-refresh-default=#{node['pdns']['server']['soa-refresh-default']}" if node['pdns']['server']['soa-refresh-default'] %>

#################################
# soa-retry-default    Default SOA retry
#
<%= "soa-retry-default=#{node['pdns']['server']['soa-retry-default']}" if node['pdns']['server']['soa-retry-default'] %>

#################################
# soa-expire-default   Default SOA expire
#
<%= "soa-expire-default=#{node['pdns']['server']['soa-expire-default']}" if node['pdns']['server']['soa-expire-default'] %>

#################################
# soa-serial-offset     Make sure that no SOA serial is less than this number
#
<%= "soa-serial-offset=#{node['pdns']['server']['soa-serial-offset']}" if node['pdns']['server']['soa-serial-offset'] %>

#################################
# socket-dir            Where the controlsocket will live.
#
<%= "socket-dir=#{node['pdns']['server']['socket-dir']}" if node['pdns']['server']['socket-dir'] %>

#################################
# use-logfile   Use a log file
#
<%= "use-logfile=#{node['pdns']['server']['use-logfile']}" if node['pdns']['server']['use-logfile'] %>

#################################
# webserver     Start a webserver for monitoring
#
<%= "webserver=#{node['pdns']['server']['webserver']}" if node['pdns']['server']['webserver'] %>

#################################
# webserver-address     IP Address of webserver to listen on
#
<%= "webserver-address=#{node['pdns']['server']['webserver-address'].join(', ')}" unless node['pdns']['server']['webserver-address'].empty? %>

#################################
# webserver-password    Password required for accessing the webserver
#
<%= "webserver-password=#{node['pdns']['server']['password']}" if node['pdns']['server']['password'] %>

#################################
# webserver-port        Port of webserver to listen on
#
<%= "webserver-port=#{node['pdns']['server']['webserver-port']}" if node['pdns']['server']['webserver-port'] %>

#################################
# webserver-print-arguments     If the webserver should print arguments
#
<%= "webserver-print-arguments=#{node['pdns']['server']['webserver-print-arguments']}" if node['pdns']['server']['webserver-print-arguments'] %>

#################################
# wildcard-url  Process URL and MBOXFW records
#
<%= "wildcard-url=#{node['pdns']['server']['wildcard-url']}" if node['pdns']['server']['wildcard-url'] %>

#################################
# wildcards     Honor wildcards in the database
#
<%= "wildcards=#{node['pdns']['server']['wildcards']}" if node['pdns']['server']['wildcards'] %>

#################################
# version-string   What should PowerDNS return for version
#                  allowed methods are anonymous / powerdns / full / custom
<%= "version-string=#{node['pdns']['server']['version-string']}" if node['pdns']['server']['version-string'] %>

<% case node['platform']
when "debian","ubuntu" -%>
include=<%= node['pdns']['server']['config-dir'] -%>/pdns.d
<% when "centos", "redhat", "fedora", "scientific" -%>
<%= File.read("#{node['pdns']['server']['config-dir']}/pdns.d/pdns.local") %>
<% end %>