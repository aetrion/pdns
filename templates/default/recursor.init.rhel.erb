#!/bin/bash
#
# pdns-recursor  This shell script controls the PowerDNS Recursor
#
# Author:       Ruben Kerkhof <ruben@rubenkerkhof.com>
#
# chkconfig:    - 49 51
#
# description:  PowerDNS Recursor is a non authoritative/recursing DNS server
# processname:  pdns_recursor
# config: /etc/pdns-recursor/recursor.conf
# pidfile: /var/run/pdns_recursor.pid
#

# source function library
. /etc/rc.d/init.d/functions

RETVAL=0
CONFIG_FILE="/etc/pdns-recursor/pdns-recursor.conf"
INSTANCE_NAME="pdns-recursor"
pdns_recursor="/usr/sbin/pdns_recursor"

# Handle instance scripts
suffix=$(basename $0 | cut -d- -f3- -s)

if [ -n "$suffix" ]; then
  CONFIG_FILE=/etc/pdns-recursor/recursor-$suffix.conf
  INSTANCE_NAME=$suffix
  EXTRAOPTS="--config-name=$INSTANCE_NAME"
  pdns_recursor="/usr/sbin/pdns_recursor ${EXTRAOPTS}"
fi

# Derive the socket-dir setting from $CONFIG_FILE
# or fall back to the default /var/run if not specified there.
PIDDIR=$(awk -F= '/^socket-dir=/ {print $2}' $CONFIG_FILE)
if [ -z "$PIDDIR" ]; then PIDDIR=/var/run; fi
# The binary "pdns_recursor" handles its own pidfile according the following
# schema: pdns_recursor-<VIRTUAL_INSTANCE_NAME>
PIDFILE="${PIDDIR}/pdns_recursor-${INSTANCE_NAME}.pid"

create_socket_dir() {
  if [ ! -d $PIDDIR ]; then
    mkdir -p $PIDDIR
    chmod 0755 $PIDDIR
  fi
}

start() {
  echo -n $"Starting pdns-recursor virtual instance '$INSTANCE_NAME': "
  create_socket_dir
  daemon ${pdns_recursor} --pidfile $PIDFILE --daemon 2>/dev/null
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$INSTANCE_NAME
}

stop() {
  echo -n $"Stopping pdns-recursor virtual instance '$INSTANCE_NAME': "
  killproc -p ${PIDFILE} "${pdns_recursor}"
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$INSTANCE_NAME && rm -f $PIDDIR/$INSTANCE_NAME.controlsocket
}

restart() {
  stop
  start
}

case "$1" in
  start)
  start
  ;;
  stop)
  stop
  ;;
  restart|force-reload|reload)
  restart
  ;;
  condrestart)
  [ -f /var/lock/subsys/pdns-recursor ] && restart
  ;;
  status)
  status -p ${PIDFILE} pdns_recursor
  RETVAL=$?
  ;;
  *)
  echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
  exit 1
esac

exit $RETVAL
